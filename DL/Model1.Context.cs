//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LBastidaBusquedaLibrosEntities1 : DbContext
    {
        public LBastidaBusquedaLibrosEntities1()
            : base("name=LBastidaBusquedaLibrosEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Libro> Libroes { get; set; }
    
        public virtual int AddLibro(string titulo, Nullable<int> anioPublicacion, string iSBN, string autor, string editorial)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var anioPublicacionParameter = anioPublicacion.HasValue ?
                new ObjectParameter("AnioPublicacion", anioPublicacion) :
                new ObjectParameter("AnioPublicacion", typeof(int));
    
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            var autorParameter = autor != null ?
                new ObjectParameter("Autor", autor) :
                new ObjectParameter("Autor", typeof(string));
    
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddLibro", tituloParameter, anioPublicacionParameter, iSBNParameter, autorParameter, editorialParameter);
        }
    
        public virtual int DeleteLibroAutor(string autor)
        {
            var autorParameter = autor != null ?
                new ObjectParameter("Autor", autor) :
                new ObjectParameter("Autor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLibroAutor", autorParameter);
        }
    
        public virtual int DeleteLibroEditorial(string editorial)
        {
            var editorialParameter = editorial != null ?
                new ObjectParameter("Editorial", editorial) :
                new ObjectParameter("Editorial", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLibroEditorial", editorialParameter);
        }
    
        public virtual ObjectResult<GetById_Result> GetById(Nullable<int> idLibro)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetById_Result>("GetById", idLibroParameter);
        }
    
        public virtual ObjectResult<Get_Result> Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Result>("Get");
        }
    
        public virtual ObjectResult<GetAll_Result> GetAll(string titulo, string autor)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var autorParameter = autor != null ?
                new ObjectParameter("Autor", autor) :
                new ObjectParameter("Autor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAll_Result>("GetAll", tituloParameter, autorParameter);
        }
    }
}
